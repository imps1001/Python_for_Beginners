Dictionaries are used to store data values in key:value pairs.
A dictionary is a collection which is ordered*, changeable and do not allow duplicates.
Example- 
thisdict = {
  "brand": "TATA",
  "model": "Punch",
  "variant": "EV",
  "year": 2024
}

- When we say that dictionaries are ordered, it means that the items have a defined order, and that order will not change.

- Unordered means that the items do not have a defined order, you cannot refer to an item by using an index.

- Dictionaries are changeable, meaning that we can change, add or remove items after the dictionary has been created.

- Dictionaries cannot have two items with the same key.

- The values in dictionary items can be of any data type:
    thisdict = {
    "brand": "TATA",
    "model": "Nexon",
    "variant": "EV",
    "year": 2024,
    "colors": ["Red", "Blue", "Black"]
  }
  thisdict = dict(name = "John", age = 36, country = "Norway")

---> Access Items

- You can access the items of a dictionary by referring to its key name, inside square brackets: thisdict["model"]

- There is also a method called get() that will give you the same result: thisdict.get("model")

- The keys() method will return a list of all the keys in the dictionary : thisdict.keys()

- The values() method will return a list of all the values in the dictionary: thisdict.values()

- The list of the values is a view of the dictionary, meaning that any changes done to the dictionary will be reflected in the values list: thisdict["year"]= 2023

- Check if key exists:
    if "model" in thisdict:
  print("Yes, 'model' is one of the keys in the thisdict dictionary")

---> Removing Items:

- The pop() method removes the item with the specified key name: thisdict.pop("model")

- The popitem() method removes the last inserted item : thisdict.popitem()

- The del keyword removes the item with the specified key name: del thisdict["model"]

- The clear() method empties the dictionary: thisdict.clear()